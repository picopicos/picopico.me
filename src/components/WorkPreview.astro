---
import { dateString } from '@utils'
import { Icon } from 'astro-icon/components'
import type { CollectionEntry } from 'astro:content'

interface Props {
  work: CollectionEntry<'works'>
}

const { work } = Astro.props

const typeIcons = {
  work: 'palette',
  oss: 'github',
  presentation: 'sun',
  other: 'moon'
}

const typeLabels = {
  work: '仕事',
  oss: 'OSS',
  presentation: '登壇',
  other: 'その他'
}
---

<article class="w-full py-5 my-4 border-accent/10">
  <div class="flex items-start gap-3">
    <div class="mt-1">
      <Icon name={typeIcons[work.data.type]} class="size-6 text-accent" />
    </div>
    <div class="flex-1">
      <h2 class="mb-2 text-xl text-[var(--theme-h1)] font-semibold">
        {work.data.link ? (
          <a href={work.data.link} target="_blank" rel="noopener noreferrer" class="hover:text-accent">
            {work.data.title} ↗
          </a>
        ) : (
          work.data.title
        )}
      </h2>
      <div class="text-foreground/80 mb-2 text-sm">
        <span class="font-medium">{typeLabels[work.data.type]}</span>
        <span class="before:content-['::'] before:inline-block before:mx-0.5">
          {dateString(work.data.date)}
        </span>
      </div>
      <p class="mb-3 text-base/7 text-foreground">{work.data.description}</p>
      {work.data.tags && work.data.tags.length > 0 && (
        <div class="flex flex-wrap gap-2">
          {work.data.tags.map((tag) => (
            <span class="text-xs px-2 py-1 bg-accent/10 text-accent rounded">
              {tag}
            </span>
          ))}
        </div>
      )}
    </div>
  </div>
</article>